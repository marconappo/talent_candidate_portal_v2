<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>import_marks_from_prometric</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>false</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>true</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint>Import marks from Prometric</hint>
        <isolate_script>true</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Import marks from Prometric</name>
        <onclick>calculateScore()</onclick>
        <order>100</order>
        <script><![CDATA[var VERBAL_REASONING = '1a4e91d097442110a4deb9dfe153af4c';
var NUMERICAL_REASONING = '124e91d097442110a4deb9dfe153af47';
var ABSTRACT_REASONING = '27cea349471721103fa44aff336d4379';
importMarksFromPrometric();
updateTotalScore();
action.setRedirectURL('x_431105_cand_ass_talent_application.do?sys_id=' + current.sys_id);

function importMarksFromPrometric() {
    var grCandidateCompetencyScore = new GlideRecord('x_431105_cand_ass_candidate_selection_criteria_score');
    grCandidateCompetencyScore.addQuery('application', current.sys_id);
    grCandidateCompetencyScore.query();
    while (grCandidateCompetencyScore.next()) {
        var competency = grCandidateCompetencyScore.assessment_selection_criteria.selection_criteria;
        var randomNumber = 3;
        if (VERBAL_REASONING.indexOf(competency) != -1) {
            randomNumber = getRandomInteger(0, 20);
            grCandidateCompetencyScore.score = randomNumber;
            grCandidateCompetencyScore.update();
        } else if (NUMERICAL_REASONING.indexOf(competency) != -1 || ABSTRACT_REASONING.indexOf(competency) != -1) {
            randomNumber = getRandomInteger(0, 10);
            grCandidateCompetencyScore.score = randomNumber;
            grCandidateCompetencyScore.update();
        }
        //gs.addInfoMessage(competency + ':' + randomNumber);
    }
}

function getRandomInteger(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function updateTotalScore() {
    var grCandidatePassMark = new GlideRecord('x_431105_cand_ass_candidate_pass_mark');
    grCandidatePassMark.addQuery('candidate', current.sys_id);
    grCandidatePassMark.query();
    var status = 'succeded';
    while (grCandidatePassMark.next()) {
        var totalScore = -1;
        var grCandidateCompetencyScore = new GlideRecord('x_431105_cand_ass_candidate_selection_criteria_score');
        grCandidateCompetencyScore.addQuery('application', current.sys_id);
        grCandidateCompetencyScore.query();
        var competencies = grCandidatePassMark.pass_mark.competencies;
        while (grCandidateCompetencyScore.next()) {
            var competency = grCandidateCompetencyScore.assessment_selection_criteria;
            if (competencies.indexOf(competency) != -1) {
                totalScore = totalScore + grCandidateCompetencyScore.score;
            }
        }
        if (totalScore != -1) {
            grCandidatePassMark.total_score = totalScore;
            grCandidatePassMark.update();
            if (totalScore < grCandidatePassMark.minimum_value) {
                status = 'failed';
            } else 
				status = 'succeded';
        }
    }
    current.status = status;
	current.update();
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>nappoma</sys_created_by>
        <sys_created_on>2023-06-08 17:54:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e9819df9479b21103fa44aff336d4399</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>Import marks from Prometric</sys_name>
        <sys_overrides/>
        <sys_package display_value="Talent NOW" source="x_431105_cand_ass">3aeff01497c02110a4deb9dfe153afb4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Talent NOW">3aeff01497c02110a4deb9dfe153afb4</sys_scope>
        <sys_update_name>sys_ui_action_e9819df9479b21103fa44aff336d4399</sys_update_name>
        <sys_updated_by>nappoma</sys_updated_by>
        <sys_updated_on>2023-06-12 22:28:12</sys_updated_on>
        <table>x_431105_cand_ass_talent_application</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
